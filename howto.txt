Git

1.  Install Git

2. % git --version 
This command would confirm the git installation

3.  % git credential-osxkeychain
It should output  
usage: git credential-osxkeychain <get|store|erase>

That means git keychain is installed

4.   % git config --global user.name "skypeople101"
5.   % git config --global user.name
skypeople101

6.  % git config --global user.email "shuvrodeepdutta@gmail.com"
7.   % git config --global user.name "skypeople101"


Go to the folder and do

8. % git init

Initialized empty Git repository in /Users/shuvrodeepdutta/Git/testrepo/.git/


< Command + shift + .  > to make the hidden file visible

9.   % git status

On branch master

No commits yet

nothing to commit (create/copy files and use "git add" to track)

10.  % touch readme.txt
          % git status 
On branch master

No commits yet

Untracked files:
  (use "git add <file>..." to include in what will be committed)
	readme.txt

nothing added to commit but untracked files present (use "git add" to track)


11.   %git add readme.txt
         % git status
On branch master

No commits yet

Changes to be committed:
  (use "git rm --cached <file>..." to unstage)
	new file:   readme.txt

12.    % git commit -m "committed readme.txt"
[master (root-commit) 8312fb4] committed readme.txt
 1 file changed, 0 insertions(+), 0 deletions(-)
 create mode 100644 readme.txt


13.  Once you made some changes to readme.txt and created another file named workbook1.txt

% touch workbook1.txt
% git status
On branch master
Changes not staged for commit:
  (use "git add <file>..." to update what will be committed)
  (use "git restore <file>..." to discard changes in working directory)
	modified:   readme.txt

Untracked files:
  (use "git add <file>..." to include in what will be committed)
	workbook1.txt

no changes added to commit (use "git add" and/or "git commit -a")

14.  So you do
   
  % git add .  

.  Means add all the files in current directory

*.txt wildcard means add all files with .txt extension

*.* means also add all the files with all the extensions etc.. 


15.   % git commit -m "committed additional file, made change to readme"
[master d02e38b] committed additional file, made change to readme
 2 files changed, 2 insertions(+)
 create mode 100644 workbook1.txt


16.   Then create a remote repository on GitHub, assuming you already have an account on GitHub;

% git remote add origin https://github.com/username/testrepo.git

% git push -u origin master 

Username for 'https://github.com': give username
Password for 'https://username@github.com': 

Enumerating objects: 6, done.
Counting objects: 100% (6/6), done.
Delta compression using up to 8 threads
Compressing objects: 100% (3/3), done.
Writing objects: 100% (6/6), 509 bytes | 509.00 KiB/s, done.
Total 6 (delta 0), reused 0 (delta 0)
To https://github.com/skypeople101/testrepo.git
 * [new branch]      master -> master
Branch 'master' set up to track remote branch 'master' from 'origin'.



Git

1.  Install Git

2. % git --version 
This command would confirm the git installation

3.  % git credential-osxkeychain
It should output  
usage: git credential-osxkeychain <get|store|erase>

That means git keychain is installed

4.   % git config --global user.name "skypeople101"
5.   % git config --global user.name
skypeople101

6.  % git config --global user.email "shuvrodeepdutta@gmail.com"
7.   % git config --global user.name "skypeople101"


Go to the folder and do

8. % git init

Initialized empty Git repository in /Users/shuvrodeepdutta/Git/testrepo/.git/


< Command + shift + .  > to make the hidden file visible

9.   % git status

On branch master

No commits yet

nothing to commit (create/copy files and use "git add" to track)

10.  % touch readme.txt
          % git status 
On branch master

No commits yet

Untracked files:
  (use "git add <file>..." to include in what will be committed)
	readme.txt

nothing added to commit but untracked files present (use "git add" to track)


11.   %git add readme.txt
         % git status
On branch master

No commits yet

Changes to be committed:
  (use "git rm --cached <file>..." to unstage)
	new file:   readme.txt

12.    % git commit -m "committed readme.txt"
[master (root-commit) 8312fb4] committed readme.txt
 1 file changed, 0 insertions(+), 0 deletions(-)
 create mode 100644 readme.txt


13.  Once you made some changes to readme.txt and created another file named workbook1.txt

% touch workbook1.txt
% git status
On branch master
Changes not staged for commit:
  (use "git add <file>..." to update what will be committed)
  (use "git restore <file>..." to discard changes in working directory)
	modified:   readme.txt

Untracked files:
  (use "git add <file>..." to include in what will be committed)
	workbook1.txt

no changes added to commit (use "git add" and/or "git commit -a")

14.  So you do
   
  % git add .  

.  Means add all the files in current directory

*.txt wildcard means add all files with .txt extension

*.* means also add all the files with all the extensions etc.. 


15.   % git commit -m "committed additional file, made change to readme"
[master d02e38b] committed additional file, made change to readme
 2 files changed, 2 insertions(+)
 create mode 100644 workbook1.txt


16.   Then create a remote repository on GitHub, assuming you already have an account on GitHub;

% git remote add origin https://github.com/username/testrepo.git

% git push -u origin master 

Username for 'https://github.com': give username
Password for 'https://username@github.com': 

Enumerating objects: 6, done.
Counting objects: 100% (6/6), done.
Delta compression using up to 8 threads
Compressing objects: 100% (3/3), done.
Writing objects: 100% (6/6), 509 bytes | 509.00 KiB/s, done.
Total 6 (delta 0), reused 0 (delta 0)
To https://github.com/skypeople101/testrepo.git
 * [new branch]      master -> master
Branch 'master' set up to track remote branch 'master' from 'origin'.



17.   To download a remote repository to local computer  cd to the directory and

%git clone https://github.com/games50/pong.git 

It will create a folder, initialise it with git init then download all the data in that repository







